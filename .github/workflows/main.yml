name: vprofile actions
on: workflow_dispatch
env: 
    AWS_REGION: us-east-1
    ECR_REPOSIROTY: vprofileapp
    EKS_CLUSTER: vprofile-eks

jobs: 
    Testing: 
        runs-on: ubuntu-latest
        steps: 
            - name: Code checkout
              uses: actions/checkout@v4

            - name: Maven test
              run: mvn test

            - name: Checkstyle
              run: mvn checkstyle:checkstyle

            - name: setup java 11
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: '11'
            
            - name: setup SonarQube
              uses: warchant/setup-sonar-scanner@v7

            - name: sonarQube scan
              run: sonar-scanner
                -Dsonar.host.url=${{ secrets.SONAR_URL }}
                -Dsonar.login=${{ secrets.SONAR_TOKEN }}
                -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
                -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
                -Dsonar.sources=src/
                -Dsonar.junit.reportsPath=target/surefire-reports/ 
                -Dsonar.jacoco.reportsPath=target/jacoco.exec 
                -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
                -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/  
            
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                java-version: 17
                distribution: 'zulu' # Alternative distribution options are available.
            - name: Cache SonarQube packages
              uses: actions/cache@v4
              with:
                path: ~/.sonar/cache
                key: ${{ runner.os }}-sonar
                restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v4
              with:
                path: ~/.m2
                key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                restore-keys: ${{ runner.os }}-m2
            - name: Build and analyze
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=project-vpro    


            - name: sonarQube quality gate check
              id: sonarqube-quality-gate-check
              uses: sonarsource/sonarqube-quality-gate-action@master
              timeout-minutes: 5
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: ${{ secrets.SONAR_URL}}

                
            

